!function(root,factory){"object"==typeof exports&&"object"==typeof module?module.exports=factory(require("React")):"function"==typeof define&&define.amd?define(["React"],factory):"object"==typeof exports?exports.Diff=factory(require("React")):root.Diff=factory(root.React)}(this,function(__WEBPACK_EXTERNAL_MODULE_2__){return function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.p="",__webpack_require__(0)}([function(module,exports,__webpack_require__){module.exports=__webpack_require__(1)},function(module,exports,__webpack_require__){var React=__webpack_require__(2),jsdiff=__webpack_require__(3);module.exports=React.createClass({displayName:"Diff",render:function(){var diff=jsdiff.diffChars(this.props.stringA,this.props.stringB),result=diff.map(function(part){var spanStyle={backgroundColor:part.added?"green":part.removed?"red":"grey"};return React.createElement("span",{style:spanStyle},part.value)});return React.createElement("pre",{className:"diff-result"},result)}})},function(module){module.exports=__WEBPACK_EXTERNAL_MODULE_2__},function(module){!function(global,undefined){var JsDiff=function(){function map(arr,mapper,that){if(Array.prototype.map)return Array.prototype.map.call(arr,mapper,that);for(var other=new Array(arr.length),i=0,n=arr.length;n>i;i++)other[i]=mapper.call(that,arr[i],i,arr);return other}function clonePath(path){return{newPos:path.newPos,components:path.components.slice(0)}}function removeEmpty(array){for(var ret=[],i=0;i<array.length;i++)array[i]&&ret.push(array[i]);return ret}function escapeHTML(s){var n=s;return n=n.replace(/&/g,"&amp;"),n=n.replace(/</g,"&lt;"),n=n.replace(/>/g,"&gt;"),n=n.replace(/"/g,"&quot;")}function buildValues(components,newString,oldString,useLongestToken){for(var componentPos=0,componentLen=components.length,newPos=0,oldPos=0;componentLen>componentPos;componentPos++){var component=components[componentPos];if(component.removed)component.value=oldString.slice(oldPos,oldPos+component.count).join(""),oldPos+=component.count;else{if(!component.added&&useLongestToken){var value=newString.slice(newPos,newPos+component.count);value=map(value,function(value,i){var oldValue=oldString[oldPos+i];return oldValue.length>value.length?oldValue:value}),component.value=value.join("")}else component.value=newString.slice(newPos,newPos+component.count).join("");newPos+=component.count,component.added||(oldPos+=component.count)}}return components}function canonicalize(obj,stack,replacementStack){stack=stack||[],replacementStack=replacementStack||[];for(var i,i=0;i<stack.length;i+=1)if(stack[i]===obj)return replacementStack[i];var canonicalizedObj;if("[object Array]"===objectPrototypeToString.call(obj)){for(stack.push(obj),canonicalizedObj=new Array(obj.length),replacementStack.push(canonicalizedObj),i=0;i<obj.length;i+=1)canonicalizedObj[i]=canonicalize(obj[i],stack,replacementStack);stack.pop(),replacementStack.pop()}else if("object"==typeof obj&&null!==obj){stack.push(obj),canonicalizedObj={},replacementStack.push(canonicalizedObj);var sortedKeys=[];for(var key in obj)sortedKeys.push(key);for(sortedKeys.sort(),i=0;i<sortedKeys.length;i+=1){var key=sortedKeys[i];canonicalizedObj[key]=canonicalize(obj[key],stack,replacementStack)}stack.pop(),replacementStack.pop()}else canonicalizedObj=obj;return canonicalizedObj}var Diff=function(ignoreWhitespace){this.ignoreWhitespace=ignoreWhitespace};Diff.prototype={diff:function(oldString,newString,callback){function done(value){return callback?(setTimeout(function(){callback(undefined,value)},0),!0):value}function execEditLength(){for(var diagonalPath=-1*editLength;editLength>=diagonalPath;diagonalPath+=2){var basePath,addPath=bestPath[diagonalPath-1],removePath=bestPath[diagonalPath+1];oldPos=(removePath?removePath.newPos:0)-diagonalPath,addPath&&(bestPath[diagonalPath-1]=undefined);var canAdd=addPath&&addPath.newPos+1<newLen,canRemove=removePath&&oldPos>=0&&oldLen>oldPos;if(canAdd||canRemove){!canAdd||canRemove&&addPath.newPos<removePath.newPos?(basePath=clonePath(removePath),self.pushComponent(basePath.components,undefined,!0)):(basePath=addPath,basePath.newPos++,self.pushComponent(basePath.components,!0,undefined));var oldPos=self.extractCommon(basePath,newString,oldString,diagonalPath);if(basePath.newPos+1>=newLen&&oldPos+1>=oldLen)return done(buildValues(basePath.components,newString,oldString,self.useLongestToken));bestPath[diagonalPath]=basePath}else bestPath[diagonalPath]=undefined}editLength++}var self=this;if(newString===oldString)return done([{value:newString}]);if(!newString)return done([{value:oldString,removed:!0}]);if(!oldString)return done([{value:newString,added:!0}]);newString=this.tokenize(newString),oldString=this.tokenize(oldString);var newLen=newString.length,oldLen=oldString.length,maxEditLength=newLen+oldLen,bestPath=[{newPos:-1,components:[]}],oldPos=this.extractCommon(bestPath[0],newString,oldString,0);if(bestPath[0].newPos+1>=newLen&&oldPos+1>=oldLen)return done([{value:newString.join("")}]);var editLength=1;if(callback)!function exec(){setTimeout(function(){return editLength>maxEditLength?callback():void(execEditLength()||exec())},0)}();else for(;maxEditLength>=editLength;){var ret=execEditLength();if(ret)return ret}},pushComponent:function(components,added,removed){var last=components[components.length-1];last&&last.added===added&&last.removed===removed?components[components.length-1]={count:last.count+1,added:added,removed:removed}:components.push({count:1,added:added,removed:removed})},extractCommon:function(basePath,newString,oldString,diagonalPath){for(var newLen=newString.length,oldLen=oldString.length,newPos=basePath.newPos,oldPos=newPos-diagonalPath,commonCount=0;newLen>newPos+1&&oldLen>oldPos+1&&this.equals(newString[newPos+1],oldString[oldPos+1]);)newPos++,oldPos++,commonCount++;return commonCount&&basePath.components.push({count:commonCount}),basePath.newPos=newPos,oldPos},equals:function(left,right){var reWhitespace=/\S/;return left===right||this.ignoreWhitespace&&!reWhitespace.test(left)&&!reWhitespace.test(right)},tokenize:function(value){return value.split("")}};var CharDiff=new Diff,WordDiff=new Diff(!0),WordWithSpaceDiff=new Diff;WordDiff.tokenize=WordWithSpaceDiff.tokenize=function(value){return removeEmpty(value.split(/(\s+|\b)/))};var CssDiff=new Diff(!0);CssDiff.tokenize=function(value){return removeEmpty(value.split(/([{}:;,]|\s+)/))};var LineDiff=new Diff;LineDiff.tokenize=function(value){for(var retLines=[],lines=value.split(/^/m),i=0;i<lines.length;i++){var line=lines[i],lastLine=lines[i-1];"\n"===line&&lastLine&&"\r"===lastLine[lastLine.length-1]?retLines[retLines.length-1]+="\n":line&&retLines.push(line)}return retLines};var SentenceDiff=new Diff;SentenceDiff.tokenize=function(value){return removeEmpty(value.split(/(\S.+?[.!?])(?=\s+|$)/))};var JsonDiff=new Diff;JsonDiff.useLongestToken=!0,JsonDiff.tokenize=LineDiff.tokenize,JsonDiff.equals=function(left,right){return LineDiff.equals(left.replace(/,([\r\n])/g,"$1"),right.replace(/,([\r\n])/g,"$1"))};var objectPrototypeToString=Object.prototype.toString;return{Diff:Diff,diffChars:function(oldStr,newStr,callback){return CharDiff.diff(oldStr,newStr,callback)},diffWords:function(oldStr,newStr,callback){return WordDiff.diff(oldStr,newStr,callback)},diffWordsWithSpace:function(oldStr,newStr,callback){return WordWithSpaceDiff.diff(oldStr,newStr,callback)},diffLines:function(oldStr,newStr,callback){return LineDiff.diff(oldStr,newStr,callback)},diffSentences:function(oldStr,newStr,callback){return SentenceDiff.diff(oldStr,newStr,callback)},diffCss:function(oldStr,newStr,callback){return CssDiff.diff(oldStr,newStr,callback)},diffJson:function(oldObj,newObj,callback){return JsonDiff.diff("string"==typeof oldObj?oldObj:JSON.stringify(canonicalize(oldObj),undefined,"  "),"string"==typeof newObj?newObj:JSON.stringify(canonicalize(newObj),undefined,"  "),callback)},createPatch:function(fileName,oldStr,newStr,oldHeader,newHeader){function contextLines(lines){return map(lines,function(entry){return" "+entry})}function eofNL(curRange,i,current){var last=diff[diff.length-2],isLast=i===diff.length-2,isLastOfType=i===diff.length-3&&(current.added!==last.added||current.removed!==last.removed);/\n$/.test(current.value)||!isLast&&!isLastOfType||curRange.push("\\ No newline at end of file")}var ret=[];ret.push("Index: "+fileName),ret.push("==================================================================="),ret.push("--- "+fileName+("undefined"==typeof oldHeader?"":"	"+oldHeader)),ret.push("+++ "+fileName+("undefined"==typeof newHeader?"":"	"+newHeader));var diff=LineDiff.diff(oldStr,newStr);diff[diff.length-1].value||diff.pop(),diff.push({value:"",lines:[]});for(var oldRangeStart=0,newRangeStart=0,curRange=[],oldLine=1,newLine=1,i=0;i<diff.length;i++){var current=diff[i],lines=current.lines||current.value.replace(/\n$/,"").split("\n");if(current.lines=lines,current.added||current.removed){if(!oldRangeStart){var prev=diff[i-1];oldRangeStart=oldLine,newRangeStart=newLine,prev&&(curRange=contextLines(prev.lines.slice(-4)),oldRangeStart-=curRange.length,newRangeStart-=curRange.length)}curRange.push.apply(curRange,map(lines,function(entry){return(current.added?"+":"-")+entry})),eofNL(curRange,i,current),current.added?newLine+=lines.length:oldLine+=lines.length}else{if(oldRangeStart)if(lines.length<=8&&i<diff.length-2)curRange.push.apply(curRange,contextLines(lines));else{var contextSize=Math.min(lines.length,4);ret.push("@@ -"+oldRangeStart+","+(oldLine-oldRangeStart+contextSize)+" +"+newRangeStart+","+(newLine-newRangeStart+contextSize)+" @@"),ret.push.apply(ret,curRange),ret.push.apply(ret,contextLines(lines.slice(0,contextSize))),lines.length<=4&&eofNL(ret,i,current),oldRangeStart=0,newRangeStart=0,curRange=[]}oldLine+=lines.length,newLine+=lines.length}}return ret.join("\n")+"\n"},applyPatch:function(oldStr,uniDiff){for(var diffstr=uniDiff.split("\n"),diff=[],remEOFNL=!1,addEOFNL=!1,i="I"===diffstr[0][0]?4:0;i<diffstr.length;i++)if("@"===diffstr[i][0]){var meh=diffstr[i].split(/@@ -(\d+),(\d+) \+(\d+),(\d+) @@/);diff.unshift({start:meh[3],oldlength:meh[2],oldlines:[],newlength:meh[4],newlines:[]})}else"+"===diffstr[i][0]?diff[0].newlines.push(diffstr[i].substr(1)):"-"===diffstr[i][0]?diff[0].oldlines.push(diffstr[i].substr(1)):" "===diffstr[i][0]?(diff[0].newlines.push(diffstr[i].substr(1)),diff[0].oldlines.push(diffstr[i].substr(1))):"\\"===diffstr[i][0]&&("+"===diffstr[i-1][0]?remEOFNL=!0:"-"===diffstr[i-1][0]&&(addEOFNL=!0));for(var str=oldStr.split("\n"),i=diff.length-1;i>=0;i--){for(var d=diff[i],j=0;j<d.oldlength;j++)if(str[d.start-1+j]!==d.oldlines[j])return!1;Array.prototype.splice.apply(str,[d.start-1,+d.oldlength].concat(d.newlines))}if(remEOFNL)for(;!str[str.length-1];)str.pop();else addEOFNL&&str.push("");return str.join("\n")},convertChangesToXML:function(changes){for(var ret=[],i=0;i<changes.length;i++){var change=changes[i];change.added?ret.push("<ins>"):change.removed&&ret.push("<del>"),ret.push(escapeHTML(change.value)),change.added?ret.push("</ins>"):change.removed&&ret.push("</del>")}return ret.join("")},convertChangesToDMP:function(changes){for(var change,ret=[],i=0;i<changes.length;i++)change=changes[i],ret.push([change.added?1:change.removed?-1:0,change.value]);return ret},canonicalize:canonicalize}}();module.exports=JsDiff}(this)}])});
//# sourceMappingURL=react-diff.min.map